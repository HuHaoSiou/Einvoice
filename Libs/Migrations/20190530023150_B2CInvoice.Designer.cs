// <auto-generated />
using System;
using EInvLib.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EInvLib.Migrations
{
    [DbContext(typeof(Mig32ontext))]
    [Migration("20190530023150_B2CInvoice")]
    partial class B2CInvoice
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.Allowance.Allowance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AmountId");

                    b.Property<Guid?>("MainId");

                    b.HasKey("Id");

                    b.HasIndex("AmountId");

                    b.HasIndex("MainId");

                    b.ToTable("D0401","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.Allowance.Amount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("TaxAmount");

                    b.Property<decimal>("TotalAmount");

                    b.HasKey("Id");

                    b.ToTable("D0401_Amount","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.Allowance.CancelAllowance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AllowanceDate");

                    b.Property<string>("BuyerId");

                    b.Property<string>("CancelAllowanceNumber");

                    b.Property<string>("CancelDate");

                    b.Property<string>("CancelReason");

                    b.Property<DateTime>("CancelTime");

                    b.Property<string>("Remark");

                    b.Property<string>("SellerId");

                    b.HasKey("Id");

                    b.ToTable("D0501","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.Allowance.DetailsProductItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AllowanceId");

                    b.Property<string>("AllowanceSequenceNumber");

                    b.Property<decimal>("Amount");

                    b.Property<string>("OriginalDescription");

                    b.Property<string>("OriginalInvoiceDate");

                    b.Property<string>("OriginalInvoiceNumber");

                    b.Property<string>("OriginalSequenceNumber");

                    b.Property<decimal>("Quantity");

                    b.Property<decimal>("Tax");

                    b.Property<int>("TaxType");

                    b.Property<string>("Unit");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceId");

                    b.ToTable("D0401_DetailsProductItem","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.Allowance.Main", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AllowanceDate");

                    b.Property<string>("AllowanceNumber");

                    b.Property<int>("AllowanceType");

                    b.Property<byte[]>("Attachment");

                    b.Property<Guid?>("BuyerId");

                    b.Property<Guid?>("SellerId");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("SellerId");

                    b.ToTable("D0401_Main","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.Allowance.MainBuyer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("CustomerNumber");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FacsimileNumber");

                    b.Property<string>("Identifier");

                    b.Property<string>("Name");

                    b.Property<string>("PersonInCharge");

                    b.Property<string>("RoleRemark");

                    b.Property<string>("TelephoneNumber");

                    b.HasKey("Id");

                    b.ToTable("D0401_MainBuyer","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.Allowance.MainSeller", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("CustomerNumber");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FacsimileNumber");

                    b.Property<string>("Identifier");

                    b.Property<string>("Name");

                    b.Property<string>("PersonInCharge");

                    b.Property<string>("RoleRemark");

                    b.Property<string>("TelephoneNumber");

                    b.HasKey("Id");

                    b.ToTable("D0401_MainSeller","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.Amount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Currency");

                    b.Property<bool>("CurrencySpecified");

                    b.Property<decimal>("DiscountAmount");

                    b.Property<bool>("DiscountAmountSpecified");

                    b.Property<decimal>("ExchangeRate");

                    b.Property<bool>("ExchangeRateSpecified");

                    b.Property<decimal>("FreeTaxSalesAmount");

                    b.Property<decimal>("OriginalCurrencyAmount");

                    b.Property<bool>("OriginalCurrencyAmountSpecified");

                    b.Property<decimal>("SalesAmount");

                    b.Property<decimal>("TaxAmount");

                    b.Property<decimal>("TaxRate");

                    b.Property<int>("TaxType");

                    b.Property<decimal>("TotalAmount");

                    b.Property<decimal>("ZeroTaxSalesAmount");

                    b.HasKey("Id");

                    b.ToTable("C0401_Amount","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.CancelInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BuyerId");

                    b.Property<string>("CancelDate");

                    b.Property<string>("CancelInvoiceNumber");

                    b.Property<string>("CancelReason");

                    b.Property<DateTime>("CancelTime");

                    b.Property<string>("InvoiceDate");

                    b.Property<string>("Remark");

                    b.Property<string>("ReturnTaxDocumentNumber");

                    b.Property<string>("SellerId");

                    b.HasKey("Id");

                    b.ToTable("C0501","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.DetailsProductItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("Description");

                    b.Property<Guid?>("InvoiceId");

                    b.Property<decimal>("Quantity");

                    b.Property<string>("RelateNumber");

                    b.Property<string>("Remark");

                    b.Property<string>("SequenceNumber");

                    b.Property<string>("Unit");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("C0401_DetailsProductItem","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AmountId");

                    b.Property<Guid?>("MainId");

                    b.HasKey("Id");

                    b.HasIndex("AmountId");

                    b.HasIndex("MainId");

                    b.ToTable("C0401","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.Main", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BuyerId");

                    b.Property<int>("BuyerRemark");

                    b.Property<bool>("BuyerRemarkSpecified");

                    b.Property<string>("CarrierId1");

                    b.Property<string>("CarrierId2");

                    b.Property<string>("CarrierType");

                    b.Property<string>("Category");

                    b.Property<string>("CheckNumber");

                    b.Property<int>("CustomsClearanceMark");

                    b.Property<bool>("CustomsClearanceMarkSpecified");

                    b.Property<int>("DonateMark");

                    b.Property<string>("GroupMark");

                    b.Property<string>("InvoiceDate");

                    b.Property<string>("InvoiceNumber");

                    b.Property<DateTime>("InvoiceTime");

                    b.Property<int>("InvoiceType");

                    b.Property<string>("MainRemark");

                    b.Property<string>("NPOBAN");

                    b.Property<string>("PermitDate");

                    b.Property<string>("PermitNumber");

                    b.Property<string>("PermitWord");

                    b.Property<string>("PrintMark");

                    b.Property<string>("RandomNumber");

                    b.Property<string>("RelateNumber");

                    b.Property<Guid?>("SellerId");

                    b.Property<string>("TaxCenter");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("SellerId");

                    b.ToTable("C0401_Main","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.MainBuyer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("CustomerNumber");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FacsimileNumber");

                    b.Property<string>("Identifier");

                    b.Property<string>("Name");

                    b.Property<string>("PersonInCharge");

                    b.Property<string>("RoleRemark");

                    b.Property<string>("TelephoneNumber");

                    b.HasKey("Id");

                    b.ToTable("C0401_MainBuyer","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.MainSeller", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("CustomerNumber");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FacsimileNumber");

                    b.Property<string>("Identifier");

                    b.Property<string>("Name");

                    b.Property<string>("PersonInCharge");

                    b.Property<string>("RoleRemark");

                    b.Property<string>("TelephoneNumber");

                    b.HasKey("Id");

                    b.ToTable("C0401_MainSeller","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.VoidInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BuyerId");

                    b.Property<string>("InvoiceDate");

                    b.Property<string>("Remark");

                    b.Property<string>("SellerId");

                    b.Property<string>("VoidDate");

                    b.Property<string>("VoidInvoiceNumber");

                    b.Property<string>("VoidReason");

                    b.Property<DateTime>("VoidTime");

                    b.HasKey("Id");

                    b.ToTable("C0701","EInv");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.Allowance.Allowance", b =>
                {
                    b.HasOne("EInv.Models.EInv.v32.B2C.Allowance.Amount", "Amount")
                        .WithMany()
                        .HasForeignKey("AmountId");

                    b.HasOne("EInv.Models.EInv.v32.B2C.Allowance.Main", "Main")
                        .WithMany()
                        .HasForeignKey("MainId");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.Allowance.DetailsProductItem", b =>
                {
                    b.HasOne("EInv.Models.EInv.v32.B2C.Allowance.Allowance")
                        .WithMany("Details")
                        .HasForeignKey("AllowanceId");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.Allowance.Main", b =>
                {
                    b.HasOne("EInv.Models.EInv.v32.B2C.Allowance.MainBuyer", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("EInv.Models.EInv.v32.B2C.Allowance.MainSeller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.DetailsProductItem", b =>
                {
                    b.HasOne("EInv.Models.EInv.v32.B2C.EInvoice.Invoice")
                        .WithMany("Details")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.Invoice", b =>
                {
                    b.HasOne("EInv.Models.EInv.v32.B2C.EInvoice.Amount", "Amount")
                        .WithMany()
                        .HasForeignKey("AmountId");

                    b.HasOne("EInv.Models.EInv.v32.B2C.EInvoice.Main", "Main")
                        .WithMany()
                        .HasForeignKey("MainId");
                });

            modelBuilder.Entity("EInv.Models.EInv.v32.B2C.EInvoice.Main", b =>
                {
                    b.HasOne("EInv.Models.EInv.v32.B2C.EInvoice.MainBuyer", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("EInv.Models.EInv.v32.B2C.EInvoice.MainSeller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");
                });
#pragma warning restore 612, 618
        }
    }
}
